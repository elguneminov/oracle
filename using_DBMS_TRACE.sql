CREATE OR REPLACE PROCEDURE TRACE_TEST (
    P_LOOPS          IN NUMBER,
    EXCEPTION_FLAG   IN PLS_INTEGER DEFAULT 1)
AS
    L_DUMMY            NUMBER := 0;
    ZERO_DIVIDE_FRAC   NUMBER;
BEGIN
    FOR I IN 1 .. P_LOOPS
    LOOP
        SELECT L_DUMMY + 1 INTO L_DUMMY FROM DUAL;

        L_DUMMY := TO_NUMBER (TO_CHAR (L_DUMMY - 1));
    END LOOP;

    IF EXCEPTION_FLAG = 0
    THEN
        ZERO_DIVIDE_FRAC := 1 / 0;
    END IF;
END;
/

DECLARE
    L_RESULT   BINARY_INTEGER;
BEGIN
    DBMS_TRACE.SET_PLSQL_TRACE (DBMS_TRACE.TRACE_ALL_CALLS);
    TRACE_TEST (P_LOOPS => 100);
    DBMS_TRACE.CLEAR_PLSQL_TRACE;

    DBMS_TRACE.SET_PLSQL_TRACE (DBMS_TRACE.TRACE_ALL_SQL);
    TRACE_TEST (P_LOOPS => 100);
    DBMS_TRACE.CLEAR_PLSQL_TRACE;

    DBMS_TRACE.SET_PLSQL_TRACE (DBMS_TRACE.TRACE_ALL_LINES);
    TRACE_TEST (P_LOOPS => 100);
    DBMS_TRACE.CLEAR_PLSQL_TRACE;

    DBMS_TRACE.SET_PLSQL_TRACE (DBMS_TRACE.TRACE_ALL_EXCEPTIONS);
    TRACE_TEST (P_LOOPS => 100, EXCEPTION_FLAG => 0);
    DBMS_TRACE.CLEAR_PLSQL_TRACE;
EXCEPTION
    WHEN OTHERS
    THEN
        DBMS_TRACE.CLEAR_PLSQL_TRACE;
END;
/

SELECT * FROM SYS.PLSQL_TRACE_RUNS;

SELECT * FROM SYS.PLSQL_TRACE_EVENTS;